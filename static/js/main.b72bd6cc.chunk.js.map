{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","logs","keyCatcher","event","setState","key","render","className","document","addEventListener","this","removeEventListener","React","Component","ReactDOM","getElementById"],"mappings":"oNAEaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,MAFV,EAaEC,WAAa,SAACC,GACZ,EAAKC,SAAS,CAAEH,KAAK,GAAD,OAAKE,EAAME,QAdnC,EAiBEC,OAAS,WACP,IAAQL,EAAS,EAAKD,MAAdC,KAER,OACE,qBAAKM,UAAU,MAAf,SACY,OAATN,EACG,2DAEA,yDAEE,+BACGA,UA5BjB,uDAKE,WACEO,SAASC,iBAAiB,QAASC,KAAKR,cAN5C,kCASE,WACEM,SAASG,oBAAoB,QAASD,KAAKR,gBAV/C,GAAyBU,IAAMC,W,MCG/BC,IAASR,OACP,cAAC,EAAD,IACAE,SAASO,eAAe,W","file":"static/js/main.b72bd6cc.chunk.js","sourcesContent":["import React from 'react';\n\nexport class App extends React.Component<{}, {}> {\n  state = {\n    logs: null,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.keyCatcher);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.keyCatcher);\n  }\n\n  keyCatcher = (event: KeyboardEvent) => {\n    this.setState({ logs: `${event.key}` });\n  };\n\n  render = () => {\n    const { logs } = this.state;\n\n    return (\n      <div className=\"App\">\n        {logs === null\n          ? <p>Nothing was pressed yet...</p>\n          : (\n            <p>\n              The last pressed key is:\n              <span>\n                {logs}\n              </span>\n            </p>\n          )}\n      </div>\n    );\n  };\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}